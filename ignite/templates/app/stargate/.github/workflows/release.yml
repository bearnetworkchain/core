# 如果您想自動化以下流程，此工作流程很有用：
#
# a) 當你推送一個帶有“v”前綴（版本）的新標籤時，創建一個新的預發布。
#
# 這種類型的預發布用於生產：alpha、beta、rc 等類型的發布。
# 創建預發布後，您需要在相關的發布頁面上進行更改
# Github 頁面並發布您的版本。
#
# b) 在推送到默認分支時創建/更新“最新”預發布版本。
#
# 這種類型的預發布對於使您的前沿二進製文件可供高級用戶使用很有用。
#
# 如果沒有推送帶有“v”前綴的標籤並且沒有更改推送到您的
# 默認分支。
on: push

jobs:
  might_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Prepare Release Variables 
        id: vars
        uses: ignite-hq/cli/actions/release/vars@develop

      - name: Issue Release Assets 
        uses: ignite-hq/cli/actions/cli@develop
        if: ${{ steps.vars.outputs.should_release == 'true' }}
        with:
          args: chain build --release --release.prefix ${{ steps.vars.outputs.tarball_prefix }} -t linux:amd64 -t darwin:amd64

      - name: Delete the "latest" Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        if: ${{ steps.vars.outputs.is_release_type_latest == 'true' }}
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.vars.outputs.should_release == 'true' }}
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          files: release/*
          prerelease: true 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
